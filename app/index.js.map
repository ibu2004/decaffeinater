{"version":3,"sources":["index.js"],"names":["killProcess","pid","exec","require","child","error","stdout","stderr","console","sleep","ms","Promise","setTimeout","resolve","Index","props","state","time","process","onStart","bind","e","setState","target","value","event","Component","render","document","getElementById"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAMC,OAAOC,QAAQ,eAAR,EAAyBD,IAAtC;AACA,MAAME,QAAQF,KAAK,UAAUD,GAAf,EAAoB,UAACI,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AAC3D,QAAIF,KAAJ,EAAW;AACTG,cAAQH,KAAR,kBAA6BA,KAA7B;AACA;AACD;AACF,GALa,CAAd;AAMD;;AAED,SAASI,KAAT,CAAeC,EAAf,EAAmB;AACjB,SAAO,IAAIC,OAAJ,CAAY;AAAA,WAAWC,WAAWC,OAAX,EAAoBH,EAApB,CAAX;AAAA,GAAZ,CAAP;AACD;;IAEKI,K;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8GACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,YAAM,EADK;AAEXC,eAAS;AAFE,KAAb;;AAKA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AARiB;AASlB;;;;;;;;;;;uBAGOX,MAAM,KAAKO,KAAL,CAAWC,IAAX,GAAgB,IAAtB,C;;;AACNjB,4BAAY,KAAKgB,KAAL,CAAWE,OAAvB;;;;;;;;;;;;;;;;;;6BAGO;AAAA;;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,yBAAU,mBADZ;AAEE,kBAAG,4BAFL;AAAA;AAAA,WADF;AAIE;AACE,uBAAU,cADZ;AAEE,kBAAK,QAFP;AAGE,yBAAY,gCAHd;AAIE,mBAAO,KAAKF,KAAL,CAAWC,IAJpB;AAKE,qBAAS,iBAACI,CAAD;AAAA,qBAAO,OAAKC,QAAL,CAAc,EAACL,MAAMI,EAAEE,MAAF,CAASC,KAAhB,EAAd,CAAP;AAAA,aALX;AAJF,SADF;AAYE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,yBAAU,mBADZ;AAEE,kBAAG,4BAFL;AAAA;AAAA,WADF;AAIE;AACE,uBAAU,cADZ;AAEE,kBAAK,MAFP;AAGE,yBAAY,qCAHd;AAIC,mBAAO,KAAKR,KAAL,CAAWE,OAJnB;AAKC,qBAAS,iBAACO,KAAD;AAAA,qBAAW,OAAKH,QAAL,CAAc,EAACJ,SAASO,MAAMF,MAAN,CAAaC,KAAvB,EAAd,CAAX;AAAA,aALV;AAJF,SAZF;AAuBE;AAAA;AAAA,YAAQ,WAAU,iBAAlB;AACC,qBAAS,KAAKL,OADf;AAAA;AAAA;AAvBF,OADF;AA4BD;;;;EA9CiB,gBAAMO,S;;AAiD1B,mBAASC,MAAT,CAAgB,8BAAC,KAAD,OAAhB,EAA2BC,SAASC,cAAT,CAAwB,KAAxB,CAA3B","file":"index.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"babel-polyfill\";\r\n\r\nfunction killProcess(pid) {\r\n  const exec = require(\"child_process\").exec;\r\n  const child = exec(\"kill \" + pid, (error, stdout, stderr) => {\r\n    if (error) {\r\n      console.error(`exec error: ${error}`);\r\n      return;\r\n    }\r\n  });\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      time: \"\",\r\n      process: \"\"\r\n    };\r\n\r\n    this.onStart = this.onStart.bind(this);\r\n  }\r\n\r\n  async onStart() {\r\n    await sleep(this.state.time*1000);\r\n    killProcess(this.state.process);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"input-group\">\r\n          <span\r\n            className=\"input-group-addon\"\r\n            id=\"sizing-addon1 basic-addon1\">Seconds</span>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            placeholder=\"Insert amount of time to play.\"\r\n            value={this.state.time}\r\n            onInput={(e) => this.setState({time: e.target.value})} />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <span\r\n            className=\"input-group-addon\"\r\n            id=\"sizing-addon1 basic-addon1\">PID</span>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Insert the process name of the app.\"\r\n           value={this.state.process}\r\n           onInput={(event) => this.setState({process: event.target.value})} />\r\n        </div>\r\n        <button className=\"btn btn-primary\"\r\n         onClick={this.onStart}>Click to start.</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"app\"));\r\n"]}