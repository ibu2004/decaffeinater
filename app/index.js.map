{"version":3,"sources":["index.js"],"names":["killProcess","pid","send","sleep","s","Promise","setTimeout","resolve","Index","props","state","time","process","countdown","onStart","bind","i","JSON","parse","stringify","setState","e","target","value","event","Component","render","document","getElementById"],"mappings":";;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACxB,wBAAYC,IAAZ,CAAiB,WAAjB,EAA8BD,GAA9B;AACD;;AAED,SAASE,KAAT,CAAeC,CAAf,EAAkB;AAChB,SAAO,IAAIC,OAAJ,CAAY;AAAA,WAAWC,WAAWC,OAAX,EAAoBH,IAAE,IAAtB,CAAX;AAAA,GAAZ,CAAP;AACD;;IAEKI,K;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8GACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,YAAM,CADK;AAEXC,eAAS,EAFE;AAGXC,iBAAW;AAHA,KAAb;;AAMA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AATiB;AAUlB;;;;;;;;;;;AAGKC,iB,GAAI,C;AACJL,oB,GAAO,KAAKD,KAAL,CAAWC,IAAX,GAAgB,E;AACvBC,uB,GAAUK,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAe,KAAKT,KAApB,CAAX,EAAuCE,O;AAChDI,oBAAI,C;;;sBAAGA,IAAI,KAAKN,KAAL,CAAWC,IAAX,GAAgB,E;;;;;;uBACxBR,MAAM,CAAN,C;;;AACN,qBAAKiB,QAAL,CAAc,EAACP,WAAW,KAAKH,KAAL,CAAWG,SAAX,GAAqB,CAAjC,EAAd;;;AAFkCG,mB;;;;;AAIpChB,4BAAYY,OAAZ;AACA,qBAAKQ,QAAL,CAAc,EAACP,WAAW,CAAZ,EAAd;;;;;;;;;;;;;;;;;;6BAGO;AAAA;;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,yBAAU,mBADZ;AAEE,kBAAG,4BAFL;AAAA;AAAA,WADF;AAIE;AACE,uBAAU,cADZ;AAEE,kBAAK,QAFP;AAGE,yBAAY,gCAHd;AAIE,mBAAO,KAAKH,KAAL,CAAWC,IAJpB;AAKE,qBAAS,iBAACU,CAAD;AAAA,qBAAO,OAAKD,QAAL,CAAc,EAACT,MAAMU,EAAEC,MAAF,CAASC,KAAhB,EAAd,CAAP;AAAA,aALX;AAJF,SADF;AAYE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,yBAAU,mBADZ;AAEE,kBAAG,4BAFL;AAAA;AAAA,WADF;AAIE;AACE,uBAAU,cADZ;AAEE,kBAAK,MAFP;AAGE,yBAAY,qCAHd;AAIE,mBAAO,KAAKb,KAAL,CAAWE,OAJpB;AAKE,qBAAS,iBAACY,KAAD;AAAA,qBAAW,OAAKJ,QAAL,CAAc,EAACR,SAASY,MAAMF,MAAN,CAAaC,KAAvB,EAAd,CAAX;AAAA,aALX;AAJF,SAZF;AAuBE;AAAA;AAAA,YAAQ,WAAU,iBAAlB;AACE,qBAAS,KAAKT,OADhB;AAAA;AAAA,SAvBF;AAyBE;AAAA;AAAA,YAAK,WAAU,gBAAf,EAAgC,IAAG,qBAAnC;AAAA;AAA+E,eAAKJ,KAAL,CAAWC,IAAX,GAAgB,EAAhB,GAAmB,KAAKD,KAAL,CAAWG,SAA7G;AAAA;AAA8I,eAAKH,KAAL,CAAWC,IAAX,GAAgB,EAA9J;AAAA;AAAA,SAzBF;AA0BE,oDAAU,WAAU,uBAApB,EAA4C,OAAO,KAAKD,KAAL,CAAWG,SAA9D,EAAyE,KAAK,KAAKH,KAAL,CAAWC,IAAX,GAAgB,EAA9F,EAAkG,oBAAiB,qBAAnH;AA1BF,OADF;AA8BD;;;;EAxDiB,gBAAMc,S;;AA2D1B,mBAASC,MAAT,CAAgB,8BAAC,KAAD,OAAhB,EAA2BC,SAASC,cAAT,CAAwB,KAAxB,CAA3B","file":"index.js","sourcesContent":["import \"babel-polyfill\";\r\nimport {ipcRenderer} from \"electron\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction killProcess(pid) {\r\n  ipcRenderer.send(\"iCanKill?\", pid);\r\n}\r\n\r\nfunction sleep(s) {\r\n  return new Promise(resolve => setTimeout(resolve, s*1000));\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      time: 0,\r\n      process: \"\",\r\n      countdown: 0\r\n    };\r\n\r\n    this.onStart = this.onStart.bind(this);\r\n  }\r\n\r\n  async onStart() {\r\n    let i = 0;\r\n    let time = this.state.time*60;\r\n    let process = JSON.parse(JSON.stringify(this.state)).process;\r\n    for (i = 0; i < this.state.time*60; i++) {\r\n      await sleep(1);\r\n      this.setState({countdown: this.state.countdown+1});\r\n    }\r\n    killProcess(process);\r\n    this.setState({countdown: 0});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"input-group\">\r\n          <span\r\n            className=\"input-group-addon\"\r\n            id=\"sizing-addon1 basic-addon1\">Minutes</span>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            placeholder=\"Insert amount of time to play.\"\r\n            value={this.state.time}\r\n            onInput={(e) => this.setState({time: e.target.value})} />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <span\r\n            className=\"input-group-addon\"\r\n            id=\"sizing-addon1 basic-addon1\">Process</span>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Insert the process name of the app.\"\r\n            value={this.state.process}\r\n            onInput={(event) => this.setState({process: event.target.value})} />\r\n        </div>\r\n        <button className=\"btn btn-primary\"\r\n          onClick={this.onStart}>Click to start.</button>\r\n        <div className=\"text-xs-center\" id=\"countdown-statement\">Time left to finish: {this.state.time*60-this.state.countdown} seconds left, out of {this.state.time*60} seconds.</div>\r\n        <progress className=\"progress extend-width\" value={this.state.countdown} max={this.state.time*60} aria-describedby=\"countdown-statement\"></progress>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"app\"));"]}