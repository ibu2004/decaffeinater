{"version":3,"sources":["webpack:///webpack/bootstrap 161c5d4a744828666f19?bbc0","webpack:///external \"child_process\"","webpack:///./src/main.js","webpack:///external \"electron\"?6928","webpack:///./src/killProc.js"],"names":["win","createWindow","width","height","loadURL","__dirname","on","process","platform","quit","event","arg","killProcUnix","killProcWin","killProcess","exec","require","pid","error","stdout","stderr","console","proc"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA,0C;;;;;;;;;;ACEA;;AACA;;;;;;AAGA;AACA;AAPA;AACA;AAOA,IAAIA,YAAJ;;AAEA,SAASC,YAAT,GAAwB;AACtB;AACAD,QAAM,4BAAkB,EAAEE,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAlB,CAAN;;AAEA;AACAH,MAAII,OAAJ,aAAsBC,SAAtB;;AAEA;AACAL,MAAIM,EAAJ,CAAO,QAAP,EAAiB,YAAM;AACrB;AACA;AACA;AACAN,UAAM,IAAN;AACD,GALD;AAMD;;AAED;AACA;AACA;AACA,cAAIM,EAAJ,CAAO,OAAP,EAAgBL,YAAhB;;AAEA;AACA,cAAIK,EAAJ,CAAO,mBAAP,EAA4B,YAAM;AAChC;AACA;AACA,MAAIC,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AACjC,kBAAIC,IAAJ;AACD;AACF,CAND;;AAQA,cAAIH,EAAJ,CAAO,UAAP,EAAmB,YAAM;AACvB;AACA;AACA,MAAIN,QAAQ,IAAZ,EAAkB;AAChBC;AACD;AACF,CAND;;AAQA;AACA,kBAAQK,EAAR,CAAW,WAAX,EAAwB,UAACI,KAAD,EAAQC,GAAR,EAAgB;AACtC,0BAAYA,GAAZ,EAAiBJ,QAAQC,QAAzB;AACD,CAFD,E;;;;;;;ACjDA,qC;;;;;;;;;;;;;QCKgBI,Y,GAAAA,Y;QAYAC,W,GAAAA,W;kBAaQC,W;AA9BxB,IAAMC,OAAO,mBAAAC,CAAQ,IAAR,EAAyBD,IAAtC,C,CAAiD;AACjD;AACA;;AAEA;AACO,SAASH,YAAT,CAAsBK,GAAtB,EAA2B;AAChCF,uBAAmBE,GAAnB,EAA0B,UAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AACnD,QAAIF,KAAJ,EAAW;AACTG,cAAQH,KAAR,0BAAqCA,KAArC;AACA,aAAOA,KAAP;AACD,KAHD,MAGO;AACL,aAAO,EAAEA,YAAF,EAASC,cAAT,EAAiBC,cAAjB,EAAP;AACD;AACF,GAPD;AAQD;;AAED;AACO,SAASP,WAAT,CAAqBI,GAArB,EAA0B;AAC/BF,yBAAqBE,GAArB,UAA+B,UAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AACxD,QAAIF,KAAJ,EAAW;AACTG,cAAQH,KAAR,0BAAqCA,KAArC;AACA,aAAO,EAAEA,YAAF,EAAP;AACD,KAHD,MAGO;AACL,aAAO,EAAEA,YAAF,EAASC,cAAT,EAAiBC,cAAjB,EAAP;AACD;AACF,GAPD;AAQD;;AAED;AACA;AACe,SAASN,WAAT,CAAqBQ,IAArB,EAA2Bd,QAA3B,EAAqC;AAClD,MAAIA,aAAa,OAAjB,EAA0B;AACxBI,iBAAaU,IAAb;AACD,GAFD,MAEO;AACLT,gBAAYS,IAAZ;AACD;AACF,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1014);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 161c5d4a744828666f19","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 1008\n// module chunks = 1","/* eslint-env node */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport { app, BrowserWindow, ipcMain } from \"electron\";\r\nimport killProcess from \"./killProc\";\r\n\r\n\r\n// Keep a global reference of the window object, if you don't, the window will\r\n// be closed automatically when the JavaScript object is garbage collected.\r\nlet win;\r\n\r\nfunction createWindow() {\r\n  // Create the browser window.\r\n  win = new BrowserWindow({ width: 800, height: 600 });\r\n\r\n  // and load the index.html of the app.\r\n  win.loadURL(`file://${__dirname}/index.html`);\r\n\r\n  // Emitted when the window is closed.\r\n  win.on(\"closed\", () => {\r\n    // Dereference the window object, usually you would store windows\r\n    // in an array if your app supports multi windows, this is the time\r\n    // when you should delete the corresponding element.\r\n    win = null;\r\n  });\r\n}\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.on(\"ready\", createWindow);\r\n\r\n// Quit when all windows are closed.\r\napp.on(\"window-all-closed\", () => {\r\n  // On macOS it is common for applications and their menu bar\r\n  // to stay active until the user quits explicitly with Cmd + Q\r\n  if (process.platform !== \"darwin\") {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on(\"activate\", () => {\r\n  // On macOS it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (win === null) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\n// In this file you can include the rest of your app's specific main process\r\nipcMain.on(\"iCanKill?\", (event, arg) => {\r\n  killProcess(arg, process.platform);\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 114\n// module chunks = 0 1","const exec = require(\"child_process\").exec;      // needed to run cmd commands.\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-else-return */\r\n\r\n// Kill processes in Unix.\r\nexport function killProcUnix(pid) {\r\n  exec(`killall -9 ${pid}`, (error, stdout, stderr) => {\r\n    if (error) {\r\n      console.error(`Failure to execute: ${error}`);\r\n      return error;\r\n    } else {\r\n      return { error, stdout, stderr };\r\n    }\r\n  });\r\n}\r\n\r\n// Kill processes in Windows.\r\nexport function killProcWin(pid) {\r\n  exec(`taskkill /IM ${pid} /F`, (error, stdout, stderr) => {\r\n    if (error) {\r\n      console.error(`Failure to execute: ${error}`);\r\n      return { error };\r\n    } else {\r\n      return { error, stdout, stderr };\r\n    }\r\n  });\r\n}\r\n\r\n// Takes any parameter, detects the current platform\r\n// and then executes correct func to kill proc.\r\nexport default function killProcess(proc, platform) {\r\n  if (platform !== \"win32\") {\r\n    killProcUnix(proc);\r\n  } else {\r\n    killProcWin(proc);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/killProc.js"],"sourceRoot":""}